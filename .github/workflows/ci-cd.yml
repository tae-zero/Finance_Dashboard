name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 프론트엔드 테스트 및 빌드
  frontend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: FRONTEND/package-lock.json
        
    - name: Install dependencies
      working-directory: ./FRONTEND
      run: npm ci
      
    - name: Run tests
      working-directory: ./FRONTEND
      run: npm test
      
    - name: Run linting
      working-directory: ./FRONTEND
      run: npm run lint
      
    - name: Build application
      working-directory: ./FRONTEND
      run: npm run build
      env:
        NODE_ENV: production
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: FRONTEND/.next

  # 백엔드 테스트
  backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      working-directory: ./BACKEND
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run backend tests
      working-directory: ./BACKEND
      run: |
        python -m pytest tests/ -v
        python -m flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  # Vercel 배포 (main 브랜치만)
  deploy-frontend:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.ORG_ID }}
        vercel-project-id: ${{ secrets.PROJECT_ID }}
        working-directory: ./FRONTEND
        vercel-args: '--prod'

  # Railway 배포 (main 브랜치만)
  deploy-backend:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Deploy to Railway
      uses: railway/deploy@v1
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE }}
